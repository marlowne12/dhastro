---
import { Icon } from 'astro-icon';
---
<section id="contact" class="py-20">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold text-center mb-12">Get in Touch</h2>
    <form id="contact-form" class="max-w-lg mx-auto">
      <div class="mb-4">
        <label for="name" class="block text-gray-700 font-semibold mb-2">Name</label>
        <input type="text" id="name" name="name" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500">
      </div>
      <div class="mb-4">
        <label for="email" class="block text-gray-700 font-semibold mb-2">Email</label>
        <input type="email" id="email" name="email" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500">
      </div>
      <div class="mb-4">
        <label for="message" class="block text-gray-700 font-semibold mb-2">Message</label>
        <textarea id="message" name="message" rows="4" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"></textarea>
      </div>
      <button type="submit" class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 transition duration-300 flex items-center justify-center">
        <span>Send Message</span>
        <Icon name="mdi:send" class="w-5 h-5 ml-2" />
      </button>
    </form>
    <div id="success-message" class="hidden mt-4 p-4 bg-green-100 text-green-700 rounded-md">
      Thank you for your message. We'll get back to you soon!
    </div>
  </div>
</section>

<script>
  const form = document.getElementById('contact-form');
  const successMessage = document.getElementById('success-message');

  form.addEventListener('submit', (e) => {
    e.preventDefault();
    if (validateForm()) {
      // Here you would typically send the form data to a server
      // For this example, we'll just show the success message
      form.reset();
      successMessage.classList.remove('hidden');
      setTimeout(() => {
        successMessage.classList.add('hidden');
      }, 5000);
    }
  });

  function validateForm() {
    const name = document.getElementById('name');
    const email = document.getElementById('email');
    const message = document.getElementById('message');
    let isValid = true;

    if (name.value.trim() === '') {
      setError(name, 'Name is required');
      isValid = false;
    } else {
      clearError(name);
    }

    if (email.value.trim() === '') {
      setError(email, 'Email is required');
      isValid = false;
    } else if (!isValidEmail(email.value)) {
      setError(email, 'Please enter a valid email address');
      isValid = false;
    } else {
      clearError(email);
    }

    if (message.value.trim() === '') {
      setError(message, 'Message is required');
      isValid = false;
    } else {
      clearError(message);
    }

    return isValid;
  }

  function setError(input, message) {
    const formControl = input.parentElement;
    const errorMessage = formControl.querySelector('.error-message') || document.createElement('div');
    errorMessage.className = 'error-message text-red-500 text-sm mt-1';
    errorMessage.innerText = message;
    if (!formControl.querySelector('.error-message')) {
      formControl.appendChild(errorMessage);
    }
    input.classList.add('border-red-500');
  }

  function clearError(input) {
    const formControl = input.parentElement;
    const errorMessage = formControl.querySelector('.error-message');
    if (errorMessage) {
      formControl.removeChild(errorMessage);
    }
    input.classList.remove('border-red-500');
  }

  function isValidEmail(email) {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
  }
</script>